/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package archivos;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JOptionPane;

/**
 *
 * @author luisgarcia
 */
public class JFArchivo extends javax.swing.JFrame {

    private static final long serialVersionUID = 1L;
    
    private String fileRead = "";

    /**
     * Creates new form NewJFrame
     */
    public JFArchivo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArchivo = new javax.swing.JTextArea();
        jBLeer = new javax.swing.JButton();
        jBEscribir = new javax.swing.JButton();
        JTNombreArchivo = new javax.swing.JTextField();
        jLNombreArchivo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArchivo.setColumns(20);
        jTextArchivo.setRows(5);
        jScrollPane1.setViewportView(jTextArchivo);

        jBLeer.setText("Leer");
        jBLeer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLeerActionPerformed(evt);
            }
        });

        jBEscribir.setText("Escribir");
        jBEscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEscribirActionPerformed(evt);
            }
        });

        jLNombreArchivo.setText("Nombre del archivo:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBEscribir, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBLeer, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLNombreArchivo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JTNombreArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JTNombreArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLNombreArchivo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBEscribir)
                            .addComponent(jBLeer))))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBLeerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLeerActionPerformed
        String nombre = JTNombreArchivo.getText().trim();
        
        // System.out.println(Arrays.toString(names) + ":" + names.length);
        if (isTxtOrPlain(nombre)) {
            File f;
            FileReader fr;
            BufferedReader br = null;
            try {
                    f = new File("./"+nombre);
                    System.out.println(f.exists()+ " "+f.canRead());
                    if (f.exists() && f.canRead()) {
                        fr = new FileReader(f);
                        br = new BufferedReader(fr);
                        
                        String line="";
                        String tota="";
                        while((line=br.readLine())!=null){
                            tota+=line+"\n"; // por cada linea leida agregamos un salto de linea
                        }
                        fileRead = nombre;
                        jTextArchivo.setText(tota);
                        br.close();
                        fr.close();
                    }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(JFArchivo.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(JFArchivo.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Solo se permite archivos de tipo .txt",
             "Error en el nombre del archivo", JOptionPane.ERROR_MESSAGE);
        }
        /* finally {
            if (br != null) {
                br.close();
            }
        } */
        
    }//GEN-LAST:event_jBLeerActionPerformed

    /**
     * Guardar el texto escrito en un archivo
     * @param nombre
     */
    private void writeFile(String nombre) {
        File f;
        BufferedWriter bw;
        try {
            f = new File(nombre);
            // if (!f.exists()) f.createNewFile();
            if (!f.exists() || f.canWrite()) {
                bw = new BufferedWriter(new FileWriter(f));
                bw.write(jTextArchivo.getText());
                bw.close();
                fileRead = nombre;
            }

        } catch (IOException e) {
            Logger.getLogger(JFArchivo.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    private void jBEscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEscribirActionPerformed
        // TODO guardar text en archivo
        String nombre = JTNombreArchivo.getText().trim();
        if (nombre.length()>0) {
            if (fileRead.equals(nombre)) {
                writeFile(nombre);
            } else if (isTxtOrPlain(nombre)) {
                File f = new File(nombre);
                if (f.exists()) {
                    if (0==JOptionPane.showConfirmDialog(this, "Desea sobreescribir el archivo existente sin antes leer su contenido?", "Continuar", JOptionPane.YES_NO_OPTION)) {
                        writeFile(nombre);
                    }
                } else {
                    if (jTextArchivo.getText().length()>0 || 0==JOptionPane.showConfirmDialog(this, "Desea crear un archivo en blanco?", "Continuar", JOptionPane.YES_NO_OPTION)) {
                        writeFile(nombre);
                    }
                }
            } else {
                
            }
        }
    }//GEN-LAST:event_jBEscribirActionPerformed
    /**
     * Determina si es un archivo .txt o sin extensi√≥n (posible texto plano)
     * @param nombre
     * @return
     */
    private boolean isTxtOrPlain(String nombre) {
        String[] names = nombre.split("\\.");
        return names.length==1 || names[names.length-1].toLowerCase().equals("txt");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFArchivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFArchivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFArchivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFArchivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFArchivo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField JTNombreArchivo;
    private javax.swing.JButton jBEscribir;
    private javax.swing.JButton jBLeer;
    private javax.swing.JLabel jLNombreArchivo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArchivo;
    // End of variables declaration//GEN-END:variables
}
